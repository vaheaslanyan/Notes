{"ast":null,"code":"var _jsxFileName = \"/Users/vaheaslanyan/Documents/Programming/Cognizant/ScrapBook/reactor/reactor-frontend-react/src/components/Notes/Notes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport notesData from \"../../notes-data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notes, setNotes] = useState([notesData]);\n  function addNewNote(newNote) {\n    setNotes(prevNotes => {});\n  }\n  function generateNote(note, index) {\n    return /*#__PURE__*/_jsxDEV(Note, {\n      noteHeader: note.h,\n      noteContent: note.p\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // key property should be replaced by a unique id instead of index\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewNote, {\n      onAdd: addNewNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), notes.map(generateNote)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Notes, \"hD84ABbTIvn6TVPARh/PW+MoMek=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","NewNote","Note","notesData","Notes","notes","setNotes","addNewNote","newNote","prevNotes","generateNote","note","index","h","p","map"],"sources":["/Users/vaheaslanyan/Documents/Programming/Cognizant/ScrapBook/reactor/reactor-frontend-react/src/components/Notes/Notes.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport NewNote from \"./NewNote\";\nimport Note from \"./Note\";\nimport notesData from \"../../notes-data\";\n\nfunction Notes() {\n  const [notes, setNotes] = useState([notesData]);\n\n  function addNewNote(newNote) {\n\n    setNotes((prevNotes) => {\n\n    });\n  }\n\n  function generateNote(note, index) {\n    return <Note key={index} noteHeader={note.h} noteContent={note.p} />; // key property should be replaced by a unique id instead of index\n  }\n\n  return (\n    <div>\n      <NewNote onAdd={addNewNote} />\n      {notes.map(generateNote)}\n    </div>\n  );\n}\n\nexport default Notes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AAAC;AAEzC,SAASC,KAAK,GAAG;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAACG,SAAS,CAAC,CAAC;EAE/C,SAASI,UAAU,CAACC,OAAO,EAAE;IAE3BF,QAAQ,CAAEG,SAAS,IAAK,CAExB,CAAC,CAAC;EACJ;EAEA,SAASC,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAE;IACjC,oBAAO,QAAC,IAAI;MAAa,UAAU,EAAED,IAAI,CAACE,CAAE;MAAC,WAAW,EAAEF,IAAI,CAACG;IAAE,GAA/CF,KAAK;MAAA;MAAA;MAAA;IAAA,QAA6C,CAAC,CAAC;EACxE;;EAEA,oBACE;IAAA,wBACE,QAAC,OAAO;MAAC,KAAK,EAAEL;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,EAC7BF,KAAK,CAACU,GAAG,CAACL,YAAY,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV;AAAC,GApBQN,KAAK;AAAA,KAALA,KAAK;AAsBd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}